@use 'sass:math';

$maxViewportWidth: 1400;
$minViewportWidth: 360;

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) * 1rem;
  } @else {
    @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.'
  }
}

@function fluid-size($max: 48, $min: 16) {
  $maxViewportWidth: 1400;
  $minViewportWidth: 360;
  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;
  @return  (($yAxisIntersection * 1rem) + ($slope * 100vw));
}

@mixin fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: 1400;
  $minViewportWidth: 390;
  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  font-size: clamp(
          #{$minSize * 1rem},
          #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
          #{$maxSize * 1rem}
  );
}



@mixin pl50 {
  padding: rem(160) rem(190) rem(246) calc(50% + 1.5rem);
}

